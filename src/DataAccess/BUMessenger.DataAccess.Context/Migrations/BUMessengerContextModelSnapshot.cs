// <auto-generated />
using System;
using BUMessenger.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BUMessenger.DataAccess.Context.Migrations
{
    [DbContext(typeof(BUMessengerContext))]
    partial class BUMessengerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BUMessenger.DataAccess.Models.Models.AuthTokenDb", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpiresAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("AuthTokens");
                });

            modelBuilder.Entity("BUMessenger.DataAccess.Models.Models.ChatDb", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ChatName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("BUMessenger.DataAccess.Models.Models.ChatUserInfoDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LastReadMessageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("LastReadMessageId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatUserInfos");
                });

            modelBuilder.Entity("BUMessenger.DataAccess.Models.Models.MessageDb", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<Guid?>("ParentMessageId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SentAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ParentMessageId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("BUMessenger.DataAccess.Models.Models.UnregisteredUserDb", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ApproveCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpiresAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("UnregisteredUsers");
                });

            modelBuilder.Entity("BUMessenger.DataAccess.Models.Models.UserDb", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHashed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BUMessenger.DataAccess.Models.Models.AuthTokenDb", b =>
                {
                    b.HasOne("BUMessenger.DataAccess.Models.Models.UserDb", "User")
                        .WithOne("AuthToken")
                        .HasForeignKey("BUMessenger.DataAccess.Models.Models.AuthTokenDb", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BUMessenger.DataAccess.Models.Models.ChatUserInfoDb", b =>
                {
                    b.HasOne("BUMessenger.DataAccess.Models.Models.ChatDb", "Chat")
                        .WithMany("ChatUserInfos")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BUMessenger.DataAccess.Models.Models.MessageDb", "LastReadMessage")
                        .WithMany("ChatUserInfos")
                        .HasForeignKey("LastReadMessageId");

                    b.HasOne("BUMessenger.DataAccess.Models.Models.UserDb", "User")
                        .WithMany("ChatUserInfos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("LastReadMessage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BUMessenger.DataAccess.Models.Models.MessageDb", b =>
                {
                    b.HasOne("BUMessenger.DataAccess.Models.Models.ChatDb", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BUMessenger.DataAccess.Models.Models.UserDb", "Creator")
                        .WithMany("Messages")
                        .HasForeignKey("CreatorId");

                    b.HasOne("BUMessenger.DataAccess.Models.Models.MessageDb", "ParentMessage")
                        .WithMany("ChildMessages")
                        .HasForeignKey("ParentMessageId");

                    b.Navigation("Chat");

                    b.Navigation("Creator");

                    b.Navigation("ParentMessage");
                });

            modelBuilder.Entity("BUMessenger.DataAccess.Models.Models.ChatDb", b =>
                {
                    b.Navigation("ChatUserInfos");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("BUMessenger.DataAccess.Models.Models.MessageDb", b =>
                {
                    b.Navigation("ChatUserInfos");

                    b.Navigation("ChildMessages");
                });

            modelBuilder.Entity("BUMessenger.DataAccess.Models.Models.UserDb", b =>
                {
                    b.Navigation("AuthToken");

                    b.Navigation("ChatUserInfos");

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
